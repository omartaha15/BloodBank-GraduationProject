@using BloodBank.Core.Constants
@using BloodBank.Core.Entities
@using OpenQA.Selenium
@inject BloodBank.Business.Interfaces.IBloodTestService BloodTestService

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Blood Bank</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <!-- Google Fonts: Poppins -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script>
        tailwind.config = {
        theme: {
        extend: {
        colors: {
        'blood-red': '#D32F2F',
        'blood-dark': '#B71C1C',
        'blood-light': '#FFEBEE',
        'accent-blue': '#0288D1',
        },
        fontFamily: {
        poppins: ['Poppins', 'sans-serif']
        }
        }
        }
        }
    </script>
    <style>
        body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(to bottom, #FFEBEE, #FFFFFF);
        }

        .nav-icon {
        transition: transform 0.2s;
        }

        .nav-link:hover .nav-icon {
        transform: scale(1.2);
        }

        .btn-modern {
        background: linear-gradient(90deg, #D32F2F, #B71C1C);
        transition: all 0.3s;
        }

        .btn-modern:hover {
        background: linear-gradient(90deg, #B71C1C, #D32F2F);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(211, 47, 47, 0.3);
        }

        .notification {
        position: fixed;
        top: 1rem;
        right: 1rem;
        z-index: 1000;
        padding: 0.75rem 1.5rem;
        border-radius: 1rem;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        color: white;
        animation: slideIn 0.3s ease-out;
        }

        @@keyframes slideIn {
        from {
        transform: translateX(100%);
        opacity: 0;
        }

        to {
        transform: translateX(0);
        opacity: 1;
        }
        }
    </style>
</head>
<body class="min-h-screen flex flex-col">
    <!-- Notifications -->
    @if (TempData["Success"] != null)
    {
        <div class="notification bg-green-500" id="success-notification">
            <i class="fas fa-check-circle mr-2"></i> @TempData["Success"]
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="notification bg-red-500" id="error-notification">
            <i class="fas fa-exclamation-triangle mr-2"></i> @TempData["Error"]
        </div>
    }

    <!-- Header -->
    <header class="bg-white shadow-lg sticky top-0 z-50">
        <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex items-center justify-between h-16">
            <!-- Logo -->
            <a href="/" class="flex items-center space-x-3">
                <i class="fas fa-tint text-blood-red text-3xl animate-pulse"></i>
                <span class="text-2xl font-bold text-gray-900 bg-gradient-to-r from-blood-red to-blood-dark bg-clip-text text-transparent">Blood Bank</span>
            </a>
            <!-- Navigation -->
            <div class="hidden md:flex items-center space-x-8">
                <a href="@Url.Action("Index", "Home")" class="nav-link flex items-center text-gray-700 hover:text-blood-red font-medium @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Home" ? "text-blood-red" : "")">
                    <i class="fas fa-home nav-icon mr-2"></i> Home
                </a>
                @if ( User.IsInRole( Roles.Hospital ) == false)
                {
                    <a href="@Url.Action("BloodPanel", "Home")" class="nav-link flex items-center text-gray-700 hover:text-blood-red font-medium @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Info" ? "text-blood-red" : "")">
                        <i class="fas fa-info-circle nav-icon mr-2"></i> How to Donate
                    </a>
                }
                @if ( User.IsInRole( Roles.Donor ))
                {
                    <a href="@Url.Action("Index", "Donation")" class="nav-link flex items-center text-gray-700 hover:text-blood-red font-medium @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Donation" ? "text-blood-red" : "")">
                        <i class="fas fa-hand-holding-heart nav-icon mr-2"></i> Donations History
                    </a>
                }

                @if (User.IsInRole(Roles.Hospital))
                {
                    <a href="@Url.Action("AllHospitalDonations", "Donation")" class="nav-link flex items-center text-gray-700 hover:text-blood-red font-medium @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Donation" ? "text-blood-red" : "")">
                        <i class="fas fa-hand-holding-heart nav-icon mr-2"></i> Donations
                    </a>
                    <a href="@Url.Action("PendingDonations", "Hospital")" class="nav-link flex items-center text-gray-700 hover:text-blood-red font-medium @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Pending Donations" ? "text-blood-red" : "")">
                        <i class="fas fa-clipboard-check nav-icon mr-2"></i> Pending Donations
                    </a>
                    <a href="@Url.Action("BloodTestsPending", "Hospital")" class="nav-link flex items-center text-gray-700 hover:text-blood-red font-medium @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Pending Donations" ? "text-blood-red" : "")">
                        <i class="fas fa-clipboard-check nav-icon mr-2"></i> Blood Tests
                    </a>
                    <a href="@Url.Action("Create", "BloodRequest")" class="nav-link flex items-center text-gray-700 hover:text-blood-red font-medium @(ViewContext.RouteData.Values["Controller"]?.ToString() == "BloodRequest" ? "text-blood-red" : "")">
                        <i class="fas fa-clipboard-check nav-icon mr-2"></i> Requests
                    </a>


                }
                @if ( User.IsInRole( Roles.Hospital ) == false)
                {
                    <a href="@Url.Action("About", "Home")" class="nav-link flex items-center text-gray-700 hover:text-blood-red font-medium @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Info" ? "text-blood-red" : "")">
                        <i class="fas fa-info nav-icon mr-2"></i> About
                    </a>
                }
                @if ( User.IsInRole( Roles.Donor ) )
                {
                    var donorId = User.FindFirst( System.Security.Claims.ClaimTypes.NameIdentifier )?.Value;
                    BloodTestDto test = null;
                    try
                    {
                        test = await BloodTestService.GetTestByDonorIdAsync( donorId );
                    }
                    catch ( NotFoundException )
                    {
                        // Here you can leave test as null or initialize it accordingly.
                    }

                    <span class="flex items-center px-3 py-1 text-sm font-medium rounded-full @(test?.HospitalApprovalStatus == HospitalApprovalStatus.Approved ? "bg-green-100 text-green-800" :
                                                                                                                  test?.HospitalApprovalStatus == HospitalApprovalStatus.Pending ? "bg-yellow-100 text-yellow-800" :
                                                                                                                  test?.HospitalApprovalStatus == HospitalApprovalStatus.Rejected ? "bg-red-100 text-red-800" :
                                                                                                                  "bg-gray-100 text-gray-800")">
                        <i class="fas @(test?.HospitalApprovalStatus == HospitalApprovalStatus.Approved ? "fa-check-circle" :
                         test?.HospitalApprovalStatus == HospitalApprovalStatus.Pending ? "fa-hourglass-half" :
                         test?.HospitalApprovalStatus == HospitalApprovalStatus.Rejected ? "fa-times-circle" :
                         "fa-info-circle") mr-2"></i>
                        @(test?.HospitalApprovalStatus.ToString() ?? "No Test")
                    </span>
                }

            </div>
            <!-- User Menu -->
            <div class="flex items-center space-x-4">
                @if ( User.Identity.IsAuthenticated )
                {
                    <div class="flex items-center space-x-3">
                        <!-- User Initial -->
                        <span class="w-10 h-10 rounded-full bg-red-600 text-white flex items-center justify-center text-xl font-bold">
                            @User.Identity.Name.Substring( 0, 1 ).ToUpper()
                        </span>
                        <!-- Name & Role -->
                        <div class="flex flex-col leading-tight">
                            <span class="text-gray-800 font-semibold">@User.Identity.Name</span>
                            <span class="inline-block text-xs uppercase bg-gray-200 text-gray-800 px-2 py-0.5 rounded-full">
                                @{
                                    var role = User.IsInRole( "Admin" )
                                    ? "System Maintainer"
                                    : User.IsInRole( "Donor" )
                                    ? "Donor"
                                    : "Blood Provider";
                                }
                                @role
                            </span>
                        </div>
                        <!-- Logout Button -->
                        <form asp-controller="Account" asp-action="Logout" method="post" class="ml-4">
                            <button type="submit" class="flex items-center text-gray-700 hover:text-red-600">
                                <i class="fas fa-sign-out-alt mr-1"></i> Logout
                            </button>
                        </form>
                    </div>
                }
                else
                {
                    <a href="@Url.Action("Login","Account")" class="text-gray-700 hover:text-red-600 font-medium">
                        <i class="fas fa-sign-in-alt mr-1"></i> Login
                    </a>
                    <a href="@Url.Action("Register","Account")" class="bg-red-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-red-700">
                        <i class="fas fa-user-plus mr-1"></i> Register
                    </a>
                }

                <!-- Mobile Menu Toggle -->
                <button class="md:hidden text-gray-700 hover:text-red-600" id="mobile-menu-toggle">
                    <i class="fas fa-bars text-2xl"></i>
                </button>
            </div>

        </nav>
        <!-- Mobile Menu -->
        <div class="md:hidden hidden bg-white shadow-lg" id="mobile-menu">
            <div class="px-6 py-4 space-y-4">
                <a href="@Url.Action("Index", "Home")" class="flex items-center text-gray-700 hover:text-blood-red">
                    <i class="fas fa-home mr-2"></i> Home
                </a>

                <a href="@Url.Action("Index", "Donation")" class="flex items-center text-gray-700 hover:text-blood-red">
                    <i class="fas fa-hand-holding-heart mr-2"></i> Donations
                </a>
                @if (User.IsInRole(Roles.Hospital))
                {
                    <a href="@Url.Action("Create", "BloodRequest")" class="flex items-center text-gray-700 hover:text-blood-red">
                        <i class="fas fa-clipboard-check mr-2"></i> Requests
                    </a>

                }
            </div>
        </div>
        <!-- Admin Sub-Nav -->
        @if (User.IsInRole(Roles.Admin))
        {
            <div class="bg-blood-dark text-white py-3">
                <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex space-x-6 text-sm">
                    <a href="@Url.Action( "Index", "Dashboard", new { area = "Admin" } )" class="flex items-center hover:text-blood-light">
                        <i class="fas fa-chart-line mr-2"></i> Dashboard
                    </a>
                    <a href="@Url.Action( "Index", "UserManagement", new { area = "Admin" } )" class="flex items-center hover:text-blood-light">
                        <i class="fas fa-user-shield mr-2"></i> Users Roles Management
                    </a>
                    <a href="@Url.Action( "GetAllUsers", "UserManagement", new { area = "Admin" } )" class="flex items-center hover:text-blood-light">
                        <i class="fas fa-users mr-2"></i> Users Lists
                    </a>
                    <a href="@Url.Action( "Index", "Inventory" )" class="flex items-center hover:text-blood-light">
                        <i class="fas fa-boxes mr-2"></i> Inventory
                    </a>
                    <a href="@Url.Action( "Manage", "BloodRequest" )" class="flex items-center hover:text-blood-light">
                        <i class="fas fa-tint mr-2"></i> Blood Requests
                    </a>
                    <a href="@Url.Action( "AllDonations", "Donation" )" class="flex items-center hover:text-blood-light">
                        <i class="fas fa-hand-holding-medical mr-2"></i> All Donations
                    </a>
                    <a href="@Url.Action( "Index", "Reports" )" class="flex items-center hover:text-blood-light">
                        <i class="fas fa-file-alt mr-2"></i> Reports
                    </a>
                </div>
            </div>
        }
    </header>

    <!-- Main Content -->
    <main class="flex-grow max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        @if (ViewData["Title"] != null)
        {
            <div class="bg-white rounded-2xl shadow-lg p-6 mb-8 flex items-center space-x-4">
                <i class="fas fa-heartbeat text-blood-red text-2xl animate-pulse"></i>
                <h1 class="text-2xl font-semibold text-gray-900">@ViewData["Title"]</h1>
            </div>
        }
        <div class="bg-white rounded-2xl shadow-lg p-6">
            @RenderBody()
        </div>
    </main>

    <!-- Footer -->
    <footer class="bg-blood-dark text-white py-6">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex flex-col sm:flex-row justify-between items-center">
            <div class="flex items-center space-x-3 mb-4 sm:mb-0">
                <i class="fas fa-tint text-blood-light text-2xl"></i>
                <span class="text-lg font-semibold">Blood Bank</span>
            </div>
            <div class="flex space-x-6 text-sm">
                <a href="@Url.Action("Contact", "Home")" class="flex items-center hover:text-blood-light">
                    <i class="fas fa-phone mr-2"></i> Contact
                </a>
                <a href="@Url.Action("Privacy", "Home")" class="flex items-center hover:text-blood-light">
                    <i class="fas fa-shield-alt mr-2"></i> Privacy
                </a>
                <a href="@Url.Action("About", "Home")" class="flex items-center hover:text-blood-light">
                    <i class="fas fa-info-circle mr-2"></i> About
                </a>
            </div>
        </div>
        <div class="text-center mt-4 text-xs text-blood-light">
            <i class="fas fa-copyright mr-1"></i> @DateTime.Now.Year Blood Bank. All Rights Reserved.
        </div>
    </footer>

    <!-- Scripts -->
    <script>
        // Mobile Menu Toggle
        document.getElementById('mobile-menu-toggle').addEventListener('click', () => {
            document.getElementById('mobile-menu').classList.toggle('hidden');
        });
        // Notification Auto-Hide with Animation
        document.addEventListener('DOMContentLoaded', () => {
            ['success-notification', 'error-notification'].forEach(id => {
                const el = document.getElementById(id);
                if (el) {
                    setTimeout(() => {
                        el.style.opacity = '0';
                        el.style.transform = 'translateX(100%)';
                        setTimeout(() => el.remove(), 300);
                    }, 3000);
                }
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>